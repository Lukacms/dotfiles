#
# ~/.bashrc
#

# $- -> current flags
# echo $- -> returns default flags (himBHs)
# We are looking whether the shell is interactive or not.
# -i -> If the -i option is present, the shell is interactive.
# otherwise, this config serves no purpose and we 'return'.
[[ $- != *i* ]] && return

colors() {
	local fgc bgc vals seq0

	printf "Color escapes are %s\n" '\e[${value};...;${value}m'
	printf "Values 30..37 are \e[33mforeground colors\e[m\n"
	printf "Values 40..47 are \e[43mbackground colors\e[m\n"
	printf "Value  1 gives a  \e[1mbold-faced look\e[m\n\n"

	# foreground colors
	for fgc in {30..37}; do
		# background colors
		for bgc in {40..47}; do
			fgc=${fgc#37} # white
			bgc=${bgc#40} # black

			vals="${fgc:+$fgc;}${bgc}"
			vals=${vals%%;}

			seq0="${vals:+\e[${vals}m}"
			printf "  %-9s" "${seq0:-(default)}"
			printf " ${seq0}TEXT\e[m"
			printf " \e[${vals:+${vals+$vals;}}1mBOLD\e[m"
		done
		echo; echo
	done
}

# set -o vi # --> maybe, if I wanna have bash with vim shortcuts
xset r rate 200 50

[ -r /usr/share/bash-completion/bash_completion ] && . /usr/share/bash-completion/bash_completion

# Change the window title of X terminals
case ${TERM} in
	xterm*|rxvt*|Eterm*|aterm|kterm|gnome*|interix|konsole*)
		PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\007"'
		;;
	screen*)
		PROMPT_COMMAND='echo -ne "\033_${USER}@${HOSTNAME%%.*}:${PWD/#$HOME/\~}\033\\"'
		;;
esac

use_color=true

# Set colorful PS1 only on colorful terminals.
# dircolors --print-database uses its own built-in database
# instead of using /etc/DIR_COLORS.  Try to use the external file
# first to take advantage of user additions.  Use internal bash
# globbing instead of external grep binary.
safe_term=${TERM//[^[:alnum:]]/?}   # sanitize TERM
match_lhs=""
[[ -f ~/.dir_colors   ]] && match_lhs="${match_lhs}$(<~/.dir_colors)"
[[ -f /etc/DIR_COLORS ]] && match_lhs="${match_lhs}$(</etc/DIR_COLORS)"
[[ -z ${match_lhs}    ]] \
	&& type -P dircolors >/dev/null \
	&& match_lhs=$(dircolors --print-database)
[[ $'\n'${match_lhs} == *$'\n'"TERM "${safe_term}* ]] && use_color=true

if ${use_color} ; then
	# .bashrc

	# Uncomment the following line if you don't like systemctl's auto-paging feature:
	# export SYSTEMD_PAGER=

	# User specific aliases and functions

	#export PATH=$PATH:/home/lukac/my_scripts

	## Colorize the ls output ##
	## Use a long listing format ##
	PROMPT_COMMAND=__prompt_command # Func to gen PS1 after CMDs
	__prompt_command() {
	    local EXIT="$?"             # This needs to be first
	    PS1=""

	    local RCol='\[\e[0m\]'

	    local Red='\[\e[0;31m\]'
	    local Gre='\[\e[0;32m\]'
	    local BYel='\[\e[1;33m\]'
	    local BBlu='\[\e[1;34m\]'
	    local Pur='\[\e[0;35m\]'

	    if [ $EXIT != 0 ]; then
	        PS1+="${Red}\u${RCol}"      # Add red if exit code non 0
	    else
	        PS1+="${Gre}\u${RCol}"
	    fi
		branch=$(git branch 2> /dev/null | grep '^*' | colrm 1 2)
	    PS1+=" [${EXIT}] ${BYel}\W ${BBlu}(${branch}) ${RCol}$ "
	}
	alias ls='ls --color=auto'
	alias grep='grep --colour=auto'
	alias egrep='egrep --colour=auto'
	alias fgrep='fgrep --colour=auto'
	alias ll='ls -lh'
	alias l='ll -a'
	alias mr_clean="find -name *~ -delete -o -name '#*#' -delete"
	alias gst='git status'
	alias gaa='git add --all'
	alias cl='clear'
  alias commit-count='git log --oneline | wc -l '
  alias commit-count-user='git shortlog -s'
  alias nv=nvim

else
	if [[ ${EUID} == 0 ]] ; then
		# show root@ when we don't have colors
		PS1='\u@\h \W \$ '
	else
		PS1='\u@\h \w \$ '
	fi
fi

unset use_color safe_term match_lhs sh

alias cp="cp -i"                          # confirm before overwriting something
alias df='df -h'                          # human-readable sizes
alias free='free -m'                      # show sizes in MB
alias np='nano -w PKGBUILD'

#alias with make
alias mtcf='clear ; make tests_run && make coverage && make fclean'      #alias for tests in c (too lazy to type the command)
alias makr='clear ; make re ; make clean'
alias makd='clear ; make debug ; make clean'

xhost +local:root > /dev/null 2>&1

# Bash won't get SIGWINCH if another process is in the foreground.
# Enable checkwinsize so that bash will check the terminal size when
# it regains control.  #65623
# http://cnswww.cns.cwru.edu/~chet/bash/FAQ (E11)
shopt -s checkwinsize

shopt -s expand_aliases

# export QT_SELECT=4

# Enable history appending instead of overwriting.  #139609
shopt -s histappend

#
# # ex - archive extractor
# # usage: ex <file>
ex ()
{
  if [ -f $1 ] ; then
    case $1 in
      *.tar.bz2)   tar xjf $1   ;;
      *.tar.gz)    tar xzf $1   ;;
      *.bz2)       bunzip2 $1   ;;
      *.rar)       unrar x $1   ;;
      *.gz)        gunzip $1    ;;
      *.tar)       tar xf $1    ;;
      *.tbz2)      tar xjf $1   ;;
      *.tgz)       tar xzf $1   ;;
      *.zip)       unzip $1     ;;
      *.Z)         uncompress $1;;
      *.7z)        7z x $1      ;;
      *)           echo "'$1' cannot be extracted via ex()" ;;
    esac
  else
    echo "'$1' is not a valid file"
  fi
}

# . "$HOME/.cargo/env"

export DENO_INSTALL="/home/lukac/.deno"
export PATH="$DENO_INSTALL/bin:$PATH:$HOME/data/Git-Shortcuts"
export EDITOR="nvim"

[ -f "/home/lukac/.ghcup/env" ] && source "/home/lukac/.ghcup/env" # ghcup-env
